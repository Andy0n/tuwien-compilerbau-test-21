struct objectc { 
    struct vft *vftc;
};

extern struct ct { 
    long (*f)(struct objectc*, long, long);
    long (*g)(struct objectc*, long, long);
    long (*h)(struct objectc*, long, long);
    long (*i)(struct objectc*, long, long);
    long (*j)(struct objectc*, long, long);
    long (*k)(struct objectc*, long, long);
    long (*l)(struct objectc*, long, long);
    long (*m)(struct objectc*, long, long);
} LessthenClass;

#define F(o,a,b) (-1*((a+b)<(a+b)))
#define G(o,a,b) (-1*((a+b)<a))
#define H(o,a,b) (-1*((a+b)<27))
#define I(o,a,b) (-1*(27<(a+b)))
#define J(o,a,b) (-1*(a<b))
#define K(o,a,b) (-1*(a<(a+b)))
#define L(o,a,b) (-1*(27<a))
#define M(o,a,b) (-1*(a<27))

RET(
    LessthenClass.f(0, 0l, 0l)                      == F(0, 0l, 0l) &&
    LessthenClass.f(0, 2147483647l, 2147483647l)    == F(0, 2147483647l, 2147483647l) &&
    LessthenClass.f(0, 2147483647l, -2147483648l)   == F(0, 2147483647l, -2147483648l) &&
    LessthenClass.f(0, -2147483648l, 2147483647l)   == F(0, -2147483648l, 2147483647l) &&
    LessthenClass.f(0, -2147483648l, -2147483648l)  == F(0, -2147483648l, -2147483648l) &&

    LessthenClass.g(0, 0l, 0l)                      == G(0, 0l, 0l) &&
    LessthenClass.g(0, 2147483647l, 2147483647l)    == G(0, 2147483647l, 2147483647l) &&
    LessthenClass.g(0, 2147483647l, -2147483648l)   == G(0, 2147483647l, -2147483648l) &&
    LessthenClass.g(0, -2147483648l, 2147483647l)   == G(0, -2147483648l, 2147483647l) &&
    LessthenClass.g(0, -2147483648l, -2147483648l)  == G(0, -2147483648l, -2147483648l) &&

    LessthenClass.h(0, 0l, 0l)                      == H(0, 0l, 0l) &&
    LessthenClass.h(0, 2147483647l, 2147483647l)    == H(0, 2147483647l, 2147483647l) &&
    LessthenClass.h(0, 2147483647l, -2147483648l)   == H(0, 2147483647l, -2147483648l) &&
    LessthenClass.h(0, -2147483648l, 2147483647l)   == H(0, -2147483648l, 2147483647l) &&
    LessthenClass.h(0, -2147483648l, -2147483648l)  == H(0, -2147483648l, -2147483648l) &&

    LessthenClass.i(0, 0l, 0l)                      == I(0, 0l, 0l) &&
    LessthenClass.i(0, 2147483647l, 2147483647l)    == I(0, 2147483647l, 2147483647l) &&
    LessthenClass.i(0, 2147483647l, -2147483648l)   == I(0, 2147483647l, -2147483648l) &&
    LessthenClass.i(0, -2147483648l, 2147483647l)   == I(0, -2147483648l, 2147483647l) &&
    LessthenClass.i(0, -2147483648l, -2147483648l)  == I(0, -2147483648l, -2147483648l) &&


    LessthenClass.j(0, 0l, 0l)                      == J(0, 0l, 0l) &&
    LessthenClass.j(0, 2147483647l, 2147483647l)    == J(0, 2147483647l, 2147483647l) &&
    LessthenClass.j(0, 2147483647l, -2147483648l)   == J(0, 2147483647l, -2147483648l) &&
    LessthenClass.j(0, -2147483648l, 2147483647l)   == J(0, -2147483648l, 2147483647l) &&
    LessthenClass.j(0, -2147483648l, -2147483648l)  == J(0, -2147483648l, -2147483648l) &&

    LessthenClass.k(0, 0l, 0l)                      == K(0, 0l, 0l) &&
    LessthenClass.k(0, 2147483647l, 2147483647l)    == K(0, 2147483647l, 2147483647l) &&
    LessthenClass.k(0, 2147483647l, -2147483648l)   == K(0, 2147483647l, -2147483648l) &&
    LessthenClass.k(0, -2147483648l, 2147483647l)   == K(0, -2147483648l, 2147483647l) &&
    LessthenClass.k(0, -2147483648l, -2147483648l)  == K(0, -2147483648l, -2147483648l) &&

    LessthenClass.l(0, 0l, 0l)                      == L(0, 0l, 0l) &&
    LessthenClass.l(0, 2147483647l, 2147483647l)    == L(0, 2147483647l, 2147483647l) &&
    LessthenClass.l(0, 2147483647l, -2147483648l)   == L(0, 2147483647l, -2147483648l) &&
    LessthenClass.l(0, -2147483648l, 2147483647l)   == L(0, -2147483648l, 2147483647l) &&
    LessthenClass.l(0, -2147483648l, -2147483648l)  == L(0, -2147483648l, -2147483648l) &&

    LessthenClass.m(0, 0l, 0l)                      == M(0, 0l, 0l) &&
    LessthenClass.m(0, 2147483647l, 2147483647l)    == M(0, 2147483647l, 2147483647l) &&
    LessthenClass.m(0, 2147483647l, -2147483648l)   == M(0, 2147483647l, -2147483648l) &&
    LessthenClass.m(0, -2147483648l, 2147483647l)   == M(0, -2147483648l, 2147483647l) &&
    LessthenClass.m(0, -2147483648l, -2147483648l)  == M(0, -2147483648l, -2147483648l)
);